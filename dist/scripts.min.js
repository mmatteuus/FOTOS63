
// FOTOS63 - Optimized Frontend Scripts
(function() {
    'use strict';
    
    // Global app state
    window.FOTOS63 = {
        supabase: null,
        currentUser: null,
        isInitialized: false,
        featuredPhotos: [
            {id:1,title:"Casamento Elegante",photographer:"Thayson Felipe",price:"R$ 150,00",image:"https://people.com/thmb/f5Nz7W-eFa-6jvzxFkv-wqgvprU=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc():focal(574x0:576x2)/Filip-Forsberg-Weds-Erin-Alvey-072422-02-2921d33a31be4395bdcc210599a8011b.jpeg"},
            {id:2,title:"Retrato Profissional",photographer:"Ana Silva",price:"R$ 80,00",image:"https://i.ytimg.com/vi/uZpcCDr7KLs/mqdefault.jpg"},
            {id:3,title:"Evento Corporativo",photographer:"Carlos Santos",price:"R$ 200,00",image:"https://lookaside.instagram.com/seo/google_widget/crawler/?media_id=3535624183557369849"},
            {id:4,title:"Fotografia de Produto",photographer:"Maria Costa",price:"R$ 120,00",image:"https://i.ytimg.com/vi/ffiJH5fUeN0/sddefault.jpg"},
            {id:5,title:"Sessão Familiar",photographer:"João Oliveira",price:"R$ 180,00",image:"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Marques_Oliveira_February_2015-1a.jpg/1200px-Marques_Oliveira_February_2015-1a.jpg"},
            {id:6,title:"Cerimônia de Casamento",photographer:"Lucia Ferreira",price:"R$ 250,00",image:"https://upload.wikimedia.org/wikipedia/en/1/19/Our_Family_Wedding.jpg"}
        ]
    };

    // Initialize app when DOM loads
    document.addEventListener('DOMContentLoaded', initApp);

    async function initApp() {
        try {
            // Initialize Supabase
            const SUPABASE_URL = 'https://weckkxjlqeulwpznauj.supabase.co';
            const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndlY2treGpscWV1bHdwem5hdWoiLCJyb2xlIjoiYW5vbiIsImlhdCI6MTc1NTg2NjA2OSwiZXhwIjoyMDcxNDQyMDY5fQ.4G7m0effx4xhHZ_Ipatp3W3zJlvi2vlKNaKzpmxmg6A';
            
            window.FOTOS63.supabase = window.supabase?.createClient(SUPABASE_URL, SUPABASE_KEY);
            
            if (!window.FOTOS63.supabase) {
                throw new Error('Supabase não carregado');
            }

            // Check current user
            const { data: { user } } = await window.FOTOS63.supabase.auth.getUser();
            if (user) {
                window.FOTOS63.currentUser = user;
                updateAuthUI(true);
            }

            // Listen for auth changes
            window.FOTOS63.supabase.auth.onAuthStateChange((event, session) => {
                if (event === 'SIGNED_IN') {
                    window.FOTOS63.currentUser = session.user;
                    updateAuthUI(true);
                    showToast('Login realizado com sucesso!', 'success');
                } else if (event === 'SIGNED_OUT') {
                    window.FOTOS63.currentUser = null;
                    updateAuthUI(false);
                    showSection('inicio');
                }
            });

            // Initialize features
            loadFeaturedPhotos();
            startCounters();
            bindEvents();
            window.FOTOS63.isInitialized = true;

            console.log('✅ FOTOS63 inicializado');
        } catch (error) {
            console.error('❌ Erro:', error);
            showToast('Erro ao inicializar aplicação', 'error');
        }
    }

    function updateAuthUI(isLoggedIn) {
        const loginBtn = document.getElementById('loginBtn');
        const registerBtn = document.getElementById('registerBtn');
        const userMenu = document.getElementById('userMenu');
        const userEmail = document.getElementById('userEmail');
        const createEventBtn = document.getElementById('createEventBtn');

        if (isLoggedIn && window.FOTOS63.currentUser) {
            loginBtn.style.display = 'none';
            registerBtn.style.display = 'none';
            userMenu.classList.remove('d-none');
            userEmail.textContent = window.FOTOS63.currentUser.email;
            
            if (window.FOTOS63.currentUser.user_metadata?.role === 'fotografo') {
                createEventBtn.style.display = 'block';
            }
        } else {
            loginBtn.style.display = 'block';
            registerBtn.style.display = 'block';
            userMenu.classList.add('d-none');
            createEventBtn.style.display = 'none';
        }
    }

    function loadFeaturedPhotos() {
        const container = document.getElementById('featuredPhotos');
        if (!container) return;

        container.innerHTML = '';
        window.FOTOS63.featuredPhotos.forEach(photo => {
            const col = document.createElement('div');
            col.className = 'col-md-4 mb-4 fade-in';
            col.innerHTML = `
                <div class="card card-custom">
                    <img src="${photo.image}" class="card-img-top" alt="${photo.title}" loading="lazy" onerror="this.src='https://upload.wikimedia.org/wikipedia/commons/6/62/Image_unavailable.png'">
                    <div class="card-body">
                        <h5 class="card-title">${photo.title}</h5>
                        <p class="card-text">
                            <small class="text-muted">Por ${photo.photographer}</small>
                        </p>
                        <p class="card-text">
                            <strong class="text-success">${photo.price}</strong>
                        </p>
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-primary-custom btn-sm" onclick="viewPhoto(${photo.id})">
                                <i class="bi bi-eye me-1"></i>Ver
                            </button>
                            <button class="btn btn-secondary-custom btn-sm" onclick="sharePhoto(${photo.id})">
                                <i class="bi bi-share me-1"></i>Compartilhar
                            </button>
                        </div>
                    </div>
                </div>
            `;
            container.appendChild(col);
        });
    }

    function startCounters() {
        const counters = document.querySelectorAll('.counter');
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const counter = entry.target;
                    const target = parseInt(counter.getAttribute('data-count')) || 0;
                    animateCounter(counter, target);
                    observer.unobserve(counter);
                }
            });
        });
        counters.forEach(counter => observer.observe(counter));
    }

    function animateCounter(element, target) {
        let current = 0;
        const increment = target / 100;
        const timer = setInterval(() => {
            current += increment;
            if (current >= target) {
                element.textContent = target.toLocaleString();
                clearInterval(timer);
            } else {
                element.textContent = Math.floor(current).toLocaleString();
            }
        }, 30);
    }

    function bindEvents() {
        // Auth forms
        const loginForm = document.getElementById('loginForm');
        const registerForm = document.getElementById('registerForm');
        const roleSelect = document.getElementById('registerRole');

        if (loginForm) {
            loginForm.addEventListener('submit', handleLogin);
        }

        if (registerForm) {
            registerForm.addEventListener('submit', handleRegister);
        }

        if (roleSelect) {
            roleSelect.addEventListener('change', togglePhotographerFields);
        }

        // Smooth scroll
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function(e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({ behavior: 'smooth' });
                }
            });
        });
    }

    async function handleLogin(e) {
        e.preventDefault();
        
        const email = document.getElementById('loginEmail').value;
        const password = document.getElementById('loginPassword').value;

        if (!email || !password) {
            showToast('Preencha todos os campos', 'warning');
            return;
        }

        try {
            const { error } = await window.FOTOS63.supabase.auth.signInWithPassword({
                email, password
            });

            if (error) throw error;

            // Close modal
            const modal = bootstrap.Modal.getInstance(document.getElementById('loginModal'));
            if (modal) modal.hide();

        } catch (error) {
            console.error('Login error:', error);
            showToast('Erro no login: ' + error.message, 'error');
        }
    }

    async function handleRegister(e) {
        e.preventDefault();

        const formData = {
            name: document.getElementById('registerName').value,
            email: document.getElementById('registerEmail').value,
            password: document.getElementById('registerPassword').value,
            phone: document.getElementById('registerPhone').value,
            role: document.getElementById('registerRole').value,
            specialty: document.getElementById('registerSpecialty').value,
            experience: document.getElementById('registerExperience').value
        };

        if (!formData.name || !formData.email || !formData.password || !formData.role) {
            showToast('Preencha todos os campos obrigatórios', 'warning');
            return;
        }

        try {
            const { error } = await window.FOTOS63.supabase.auth.signUp({
                email: formData.email,
                password: formData.password,
                options: {
                    data: {
                        name: formData.name,
                        phone: formData.phone,
                        role: formData.role,
                        specialty: formData.specialty,
                        experience: formData.experience
                    }
                }
            });

            if (error) throw error;

            // Close modal
            const modal = bootstrap.Modal.getInstance(document.getElementById('registerModal'));
            if (modal) modal.hide();

            showToast('Cadastro realizado! Verifique seu email.', 'success');

        } catch (error) {
            console.error('Register error:', error);
            showToast('Erro no cadastro: ' + error.message, 'error');
        }
    }

    function togglePhotographerFields() {
        const role = document.getElementById('registerRole').value;
        const fields = document.getElementById('photographerFields');
        if (fields) {
            fields.classList.toggle('d-none', role !== 'fotografo');
        }
    }

    // Global functions for buttons
    window.showSection = function(sectionName) {
        document.querySelectorAll('.page-section').forEach(s => s.classList.add('d-none'));
        document.getElementById(sectionName).classList.remove('d-none');
        
        // Update nav
        document.querySelectorAll('.nav-link').forEach(l => l.classList.remove('active'));
        const navLink = document.querySelector(`[onclick="showSection('${sectionName}')"]`);
        if (navLink) navLink.classList.add('active');

        // Load content
        switch(sectionName) {
            case 'galeria': loadGallery(); break;
            case 'eventos': loadEvents(); break;
            case 'fotografos': loadPhotographers(); break;
            case 'usuarios': loadUsers(); break;
            case 'dashboard': loadDashboard(); break;
        }
    };

    window.showLoginModal = function() {
        const modal = new bootstrap.Modal(document.getElementById('loginModal'));
        modal.show();
    };

    window.showRegisterModal = function() {
        const modal = new bootstrap.Modal(document.getElementById('registerModal'));
        modal.show();
    };

    window.logout = async function() {
        try {
            await window.FOTOS63.supabase.auth.signOut();
            showToast('Logout realizado com sucesso!', 'success');
        } catch (error) {
            console.error('Logout error:', error);
            showToast('Erro no logout', 'error');
        }
    };

    window.viewPhoto = function(id) {
        const photo = window.FOTOS63.featuredPhotos.find(p => p.id === id);
        if (photo) {
            showToast(`Visualizando: ${photo.title}`, 'info');
        }
    };

    window.buyPhoto = function(id) {
        if (!window.FOTOS63.currentUser) {
            showToast('Faça login para comprar fotos!', 'warning');
            showLoginModal();
            return;
        }
        const photo = window.FOTOS63.featuredPhotos.find(p => p.id === id);
        if (photo) {
            showToast(`Iniciando compra: ${photo.title}`, 'success');
        }
    };

    window.sharePhoto = async function(id) {
        const photo = window.FOTOS63.featuredPhotos.find(p => p.id === id);
        if (!photo) return;

        if (navigator.share) {
            try {
                await navigator.share({
                    title: photo.title,
                    text: `Confira esta foto de ${photo.photographer}!`,
                    url: window.location.href
                });
            } catch (error) {
                copyToClipboard();
            }
        } else {
            copyToClipboard();
        }

        function copyToClipboard() {
            navigator.clipboard.writeText(window.location.href);
            showToast('Link copiado!', 'success');
        }
    };

    window.applyFilters = function() {
        const category = document.getElementById('categoryFilter')?.value || '';
        const search = document.getElementById('searchInput')?.value?.toLowerCase() || '';
        
        let filtered = window.FOTOS63.featuredPhotos;
        
        if (category) {
            filtered = filtered.filter(p => p.category === category);
        }
        
        if (search) {
            filtered = filtered.filter(p => 
                p.title.toLowerCase().includes(search) ||
                p.photographer.toLowerCase().includes(search)
            );
        }

        loadFilteredPhotos(filtered);
        showToast(`${filtered.length} fotos encontradas`, 'info');
    };

    window.showCreateEventModal = function() {
        showToast('Funcionalidade em desenvolvimento!', 'info');
    };

    function loadGallery() {
        loadFilteredPhotos(window.FOTOS63.featuredPhotos);
    }

    function loadFilteredPhotos(photos) {
        const container = document.getElementById('galleryGrid');
        if (!container) return;

        container.innerHTML = '';
        photos.forEach(photo => {
            const col = document.createElement('div');
            col.className = 'col-md-4 mb-4 fade-in';
            col.innerHTML = `
                <div class="card card-custom">
                    <img src="${photo.image}" class="card-img-top" alt="${photo.title}" loading="lazy">
                    <div class="card-body">
                        <h5 class="card-title">${photo.title}</h5>
                        <p class="card-text">
                            <small class="text-muted">Por ${photo.photographer}</small><br>
                            <span class="badge bg-primary">${photo.category}</span>
                        </p>
                        <p class="card-text">
                            <strong class="text-success">${photo.price}</strong>
                        </p>
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-primary-custom btn-sm" onclick="viewPhoto(${photo.id})">
                                <i class="bi bi-eye me-1"></i>Detalhes
                            </button>
                            <button class="btn btn-success btn-sm" onclick="buyPhoto(${photo.id})">
                                <i class="bi bi-cart-plus me-1"></i>Comprar
                            </button>
                        </div>
                    </div>
                </div>
            `;
            container.appendChild(col);
        });
    }

    function loadEvents() {
        const container = document.getElementById('eventsGrid');
        if (!container) return;

        const events = [
            {title:"Workshop de Fotografia de Casamento",desc:"Aprenda técnicas profissionais de fotografia de casamento.",date:"15 de Março, 2024",location:"Palmas - TO",img:"http://static1.squarespace.com/static/60ce7a9f29fe0541ef5c8ad8/t/66ebb84d614a917ff0354ec9/1726724173581/rancho-de-las-palmas-camarillo-outdoor-wedding-sunset-bride-groom-portraits-1.jpg?format=1500w"},
            {title:"Concurso FOTOS63",desc:"Participe do maior concurso de fotografia do Tocantins.",date:"20 de Março, 2024",location:"Prêmios até R$ 5.000",img:"https://i.ytimg.com/vi/lseMC_Jb6js/mqdefault.jpg"},
            {title:"Encontro de Fotógrafos TO",desc:"Networking entre profissionais da fotografia.",date:"25 de Março, 2024",location:"Networking",img:"https://upload.wikimedia.org/wikipedia/en/8/89/Survivor_Tocantins_brazilian_highlands_s18_region_1_dvd.png"}
        ];

        container.innerHTML = '';
        events.forEach(event => {
            const col = document.createElement('div');
            col.className = 'col-md-4 mb-4';
            col.innerHTML = `
                <div class="card card-custom">
                    <img src="${event.img}" class="card-img-top" alt="${event.title}" loading="lazy">
                    <div class="card-body">
                        <h5 class="card-title">${event.title}</h5>
                        <p class="card-text">${event.desc}</p>
                        <p class="text-muted">
                            <i class="bi bi-calendar me-1"></i>${event.date}<br>
                            <i class="bi bi-geo-alt me-1"></i>${event.location}
                        </p>
                        <button class="btn btn-primary-custom">
                            <i class="bi bi-calendar-plus me-1"></i>${event.action}
                        </button>
                    </div>
                </div>
            `;
            container.appendChild(col);
        });
    }

    function loadPhotographers() {
        const container = document.getElementById('photographersGrid');
        if (!container) return;

        const photographers = [
            {name:"Thayson Felipe",bio:"Especialista em casamento e eventos. 8 anos de experiência.",badges:["Casamento","Eventos"],rating:"4.9 (127 avaliações)",img:"https://cdn.abacus.ai/images/d38f111e-4599-49e1-b0fb-ff52ee9d34ba.png"},
            {name:"Ana Silva",bio:"Fotógrafa especializada em retratos e lifestyle. 5 anos.",badges:["Retrato","Lifestyle"],rating:"4.7 (89 avaliações)",img:"https://cdn.abacus.ai/images/3568ede2-af3c-4177-8e35-43265eb58fa4.png"},
            {name:"Carlos Santos",bio:"Especialista em fotografia comercial e de produto. 10 anos.",badges:["Produto","Comercial"],rating:"5.0 (203 avaliações)",img:"https://cdn.abacus.ai/images/1bef9d62-1d08-4b88-ad0b-8b81f12448ea.png"}
        ];

        container.innerHTML = '';
        photographers.forEach(photographer => {
            const col = document.createElement('div');
            col.className = 'col-md-4 mb-4';
            col.innerHTML = `
                <div class="card card-custom">
                    <img src="${photographer.img}" class="card-img-top" alt="${photographer.name}" loading="lazy">
                    <div class="card-body">
                        <h5 class="card-title">${photographer.name}</h5>
                        <p class="card-text">${photographer.bio}</p>
                        <div class="mb-2">
                            ${photographer.badges.map(badge => `<span class="badge bg-primary me-1">${badge}</span>`).join('')}
                        </div>
                        <div class="mb-2">
                            ${'★'.repeat(5)} <span class="ms-2">${photographer.rating}</span>
                        </div>
                        <button class="btn btn-primary-custom">
                            <i class="bi bi-person me-1"></i>Ver Perfil
                        </button>
                    </div>
                </div>
            `;
            container.appendChild(col);
        });
    }

    function loadUsers() {
        const container = document.getElementById('usersGrid');
        if (!container) return;

        if (!window.FOTOS63.currentUser?.user_metadata?.role === 'admin') {
            container.innerHTML = '<div class="col-12"><div class="alert alert-warning">Acesso restrito a administradores.</div></div>';
            return;
        }

        container.innerHTML = `
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Usuários Cadastrados</h5>
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr><th>Nome</th><th>Email</th><th>Tipo</th><th>Status</th><th>Cadastro</th><th>Ações</th></tr>
                                </thead>
                                <tbody>
                                    <tr><td>Thayson Felipe</td><td>thayson@email.com</td><td><span class="badge bg-success">Fotógrafo</span></td><td><span class="badge bg-success">Ativo</span></td><td>01/01/2024</td><td><button class="btn btn-sm btn-outline-primary">Editar</button></td></tr>
                                    <tr><td>Ana Silva</td><td>ana@email.com</td><td><span class="badge bg-success">Fotógrafo</span></td><td><span class="badge bg-success">Ativo</span></td><td>05/01/2024</td><td><button class="btn btn-sm btn-outline-primary">Editar</button></td></tr>
                                    <tr><td>João Cliente</td><td>joao@email.com</td><td><span class="badge bg-info">Cliente</span></td><td><span class="badge bg-success">Ativo</span></td><td>10/01/2024</td><td><button class="btn btn-sm btn-outline-primary">Editar</button></td></tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }

    function loadDashboard() {
        const container = document.getElementById('dashboardContent');
        if (!container) return;

        if (!window.FOTOS63.currentUser) {
            container.innerHTML = '<div class="col-12"><div class="alert alert-info">Faça login para acessar seu dashboard.</div></div>';
            return;
        }

        const isPhotographer = window.FOTOS63.currentUser.user_metadata?.role === 'fotografo';
        
        container.innerHTML = `
            <div class="col-md-3 mb-4">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4>${isPhotographer ? '23' : '5'}</h4>
                                <p>${isPhotographer ? 'Fotos Vendidas' : 'Compras'}</p>
                            </div>
                            <div class="align-self-center">
                                <i class="bi bi-camera-fill fs-1"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-4">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4>R$ ${isPhotographer ? '2.350' : '890'},00</h4>
                                <p>${isPhotographer ? 'Faturamento' : 'Total Gasto'}</p>
                            </div>
                            <div class="align-self-center">
                                <i class="bi bi-currency-dollar fs-1"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            ${isPhotographer ? `
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Upload de Nova Foto</h5>
                        <form id="uploadPhotoForm">
                            <div class="mb-3">
                                <label class="form-label">Título</label>
                                <input type="text" class="form-control" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Preço (R$)</label>
                                <input type="number" class="form-control" min="0" step="0.01" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Categoria</label>
                                <select class="form-select" required>
                                    <option value="casamento">Casamento</option>
                                    <option value="evento">Evento</option>
                                    <option value="retrato">Retrato</option>
                                    <option value="produto">Produto</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Arquivo</label>
                                <input type="file" class="form-control" accept="image/*" required>
                            </div>
                            <button type="submit" class="btn btn-primary-custom">
                                <i class="bi bi-upload me-1"></i>Upload Foto
                            </button>
                        </form>
                    </div>
                </div>
            </div>
            ` : ''}
        `;

        // Bind upload form if photographer
        if (isPhotographer) {
            const form = document.getElementById('uploadPhotoForm');
            if (form) {
                form.addEventListener('submit', handlePhotoUpload);
            }
        }
    }

    async function handlePhotoUpload(e) {
        e.preventDefault();
        showToast('Funcionalidade de upload em desenvolvimento!', 'info');
    }

    function showToast(message, type = 'info') {
        const toastId = 'toast-' + Date.now();
        const bgClass = type === 'error' ? 'bg-danger' : `bg-${type}`;
        
        let container = document.getElementById('toastContainer');
        if (!container) {
            container = document.createElement('div');
            container.id = 'toastContainer';
            container.className = 'toast-container position-fixed top-0 end-0 p-3';
            container.style.zIndex = '9999';
            document.body.appendChild(container);
        }

        const toastHtml = `
            <div id="${toastId}" class="toast align-items-center text-white ${bgClass} border-0" role="alert">
                <div class="d-flex">
                    <div class="toast-body">${message}</div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            </div>
        `;

        container.insertAdjacentHTML('beforeend', toastHtml);
        
        const toastElement = document.getElementById(toastId);
        const toast = new bootstrap.Toast(toastElement);
        toast.show();

        toastElement.addEventListener('hidden.bs.toast', () => toastElement.remove());
    }

})();
